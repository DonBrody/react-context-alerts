{"version":3,"sources":["views/main/index.js","App.js","index.js"],"names":["baseButtonStyles","display","width","margin","color","fontWeight","Main","state","open","classes","this","props","react_default","a","createElement","react_context_alerts","context","className","buttonGroup","index_es","info","variant","onClick","success","warning","error","Component","withStyles","theme","Object","objectSpread","backgroundColor","palette","main","&:hover","darker","muiTheme","createMuiTheme","primary","secondary","contrastThreshold","tonalOffset","typography","useNextVariants","rcaTheme","createRcaTheme","body","background","headerColor","messageColor","rcaSettings","createRcaSettings","timeout","showAdornment","enableClickAwayListener","showCloseButton","showProgressBar","rcaStyles","AppBase","Redirect","to","App","core_styles","role","position","component","settings","style","HashRouter","Switch","Route","exact","path","marginTop","textAlign","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fb54c560.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { AlertsConsumer } from 'react-context-alerts';\n\nconst baseButtonStyles = {\n  display: 'block',\n  width: 200,\n  margin: '25px auto 25px 10%',\n  color: 'white',\n  fontWeight: 'bold',\n};\n\nconst styles = theme => ({\n  buttonGroup: {\n    width: '50%',\n  },\n  info: {\n    ...baseButtonStyles,\n    backgroundColor: theme.palette.info.main,\n    '&:hover': {\n      backgroundColor: theme.palette.info.darker,\n    },\n  },\n  success: {\n    ...baseButtonStyles,\n    backgroundColor: theme.palette.success.main,\n    '&:hover': {\n      backgroundColor: theme.palette.success.darker,\n    },\n  },\n  warning: {\n    ...baseButtonStyles,\n    backgroundColor: theme.palette.warning.main,\n    '&:hover': {\n      backgroundColor: theme.palette.warning.darker,\n    },\n  },\n  error: {\n    ...baseButtonStyles,\n    backgroundColor: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: theme.palette.error.darker,\n    },\n  },\n});\n\nclass Main extends Component {\n  state = {\n    open: false,\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <AlertsConsumer>\n          {context => {\n            return (\n              <section className={classes.buttonGroup}>\n                <Button\n                  className={classes.info}\n                  variant=\"contained\"\n                  onClick={() =>\n                    context.info(\n                      'Info Header',\n                      'Info message! -- default theme and settings')}\n                >\n                  Info\n                </Button>\n                <Button\n                  className={classes.success}\n                  variant=\"contained\"\n                  onClick={() => \n                    context.success(\n                    'Yellow Success Header',\n                    'White success message! -- no adornment, green body background, 7 second timeout')}\n                >\n                  Success\n                </Button>\n                <Button\n                  className={classes.warning}\n                  variant=\"contained\"\n                  onClick={() => \n                    context.warning(\n                      null,\n                      'White warning message! -- null header, orange body background, click away listener enabled, 10 second timeout')}\n                >\n                  Warning\n                </Button>\n                <Button\n                  className={classes.error}\n                  variant=\"contained\"\n                  onClick={() =>\n                    context.error(\n                      'Error Header',\n                      'Error message! -- progress bar enabled, 10 second timeout, close button enabled')}\n                >\n                  Error\n                </Button>\n              </section>\n          )}}\n        </AlertsConsumer>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(Main);\n","import React, { Component } from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { AlertsProvider, createRcaTheme, createRcaSettings } from 'react-context-alerts';\nimport Main from './views/main';\n\nconst muiTheme = createMuiTheme({\n  palette: {\n    primary: { main: '#2196F3' },\n    secondary: { main: '#FFF' },\n    info: { main: '#1976d2', darker: '#0d47a1' },\n    success: { main: '#388e3c', darker: '#1b5e20' },\n    warning: { main: '#f57c00', darker: '#e65100' },\n    error: { main: '#d32f2f', darker: '#b71c1c' },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst rcaTheme = createRcaTheme({\n  success: {\n    body: {\n      background: '#388E3C',\n      headerColor: 'yellow',\n      messageColor: 'white',\n    },\n  },\n  warning: {\n    body: {\n      background: '#F57C00',\n      color: 'white',\n    },\n  },\n});\n\nconst rcaSettings = createRcaSettings({\n  success: {\n    timeout: 7000,\n    showAdornment: false,\n  },\n  warning: {\n    timeout: 10000,\n    enableClickAwayListener: true,\n  },\n  error: {\n    timeout: 10000,\n    showCloseButton: true,\n    showProgressBar: true,\n  },\n});\n\nconst rcaStyles = {\n};\n\nconst AppBase = () => (\n  <Redirect to =\"/\" />\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={muiTheme}>\n        <div>\n          <header role=\"banner\">\n            <AppBar position=\"static\" color=\"primary\">\n              <Toolbar>\n                <Typography variant=\"h5\" component=\"h1\" color=\"secondary\">\n                  React Context Alerts Demo\n                </Typography>\n              </Toolbar>\n            </AppBar>\n          </header>\n          <AlertsProvider theme={rcaTheme} settings={rcaSettings} style={rcaStyles}>\n            <main role=\"main\">\n              <HashRouter>\n                <Switch>\n                  <Route exact path=\"/\" component={Main}/>\n                  <Route path=\"/\" component={AppBase} />\n                </Switch>\n              </HashRouter>\n            </main>\n          </AlertsProvider>\n          <footer style={{ marginTop: 60, textAlign: 'center' }}>\n            <Typography variant=\"caption\" component=\"aside\">\n              MIT Licensed Software\n            </Typography>\n          </footer>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}